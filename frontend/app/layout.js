"use client";

import "./globals.css";
import "@rainbow-me/rainbowkit/styles.css";
import { Inter, Poppins } from "next/font/google";
import {
  ConnectButton,
  getDefaultConfig,
  RainbowKitProvider,
} from "@rainbow-me/rainbowkit";
import { WagmiProvider } from "wagmi";
import { mainnet } from "wagmi/chains";
import { QueryClientProvider, QueryClient } from "@tanstack/react-query";
import { Toaster } from "sonner";

const config = getDefaultConfig({
  appName: "CRMS",
  projectId: "afdac16b07284976cc7f71299771b2b7",
  chains: [mainnet],
});

const poppins = Poppins({
  weight: ["400", "600"],
  subsets: ["latin"],
});

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

const queryClient = new QueryClient();
import { useAuthState } from "react-firebase-hooks/auth";
import StyledFirebaseAuth from "react-firebaseui/StyledFirebaseAuth";
import { auth } from "./firebase/config";
import { getAuth } from "firebase/auth";

export default function RootLayout({ children }) {
  // const [user, loading, error] = useAuthState(auth);

  // console.log(user);

  // const getUser = () => {
  //   const auth = getAuth();
  //   const user = auth.currentUser;

  //   console.log(user);
  //   if (user !== null) {
  //     // User is signed in, see docs for a list of available properties
  //     // https://firebase.google.com/docs/reference/js/firebase.User
  //     // ...
  //     const uid = user.uid;
  //     const displayName = user.displayName;
  //     const email = user.email;
  //     const photoURL = user.photoURL;
  //     const emailVerified = user.emailVerified;
  //     return user;
  //   } else {
  //     // No user is signed in.
  //   }
  // };

  // getUser();

  return (
    <html lang="en">
      <body className={`${poppins.className} h-screen w-full`}>
        <WagmiProvider config={config}>
          <QueryClientProvider client={queryClient}>
            <RainbowKitProvider>
              {" "}
              {children}
              <div className="absolute top-0 right-0 mt-10 mr-4 w-[200px]">
                <ConnectButton />
                {/* <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} /> */}
                {/* {user && user.displayName} */}
              </div>
              <Toaster position="bottom-right" richColors />
            </RainbowKitProvider>
          </QueryClientProvider>
        </WagmiProvider>
      </body>
    </html>
  );
}
